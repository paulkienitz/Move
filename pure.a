; The idea here is to create an alternative version of crt0 which will
; cause Manx programs linked with it to be reentrant and reexecutable,
; as long as they use small data.

; Copyright (C) 1986,1987 by Manx Software Systems, Inc.
; Modified by Paul Kienitz from Manx's original.


;	Initial startup routine for Aztec C.

;	NOTE: code down to "start" must be placed at beginning of
;		all programs linked with Aztec Linker using small
;		code or small data.
;	AND PROGRAMS USING LARGE DATA CAN'T USE THIS.


	mc68881
	entry	.begin
	public	.begin
.begin
; here we have to call _oldgeta4, which points it to original data
; new _geta4 points it to a copy of the data... but how?
;	bsr	_geta4			;get A4
; are these small-data references here?  Yes.
	far data		; so these refer to originals
	lea	__H1_end,a1
	lea	__H2_org,a2
	cmp.l	a1,a2			;check if BSS and DATA together
	bne	start			;no, don't have to clear
; what we gotta do is AllocMem a copy of the space (BSS and Data MUST be
; together) and clear the BSS part and copy over the Data part, and set up
; _geta4 so it points to this area.  THAT's the tricky part.
	move.w	#((__H2_end-__H2_org)/4)-1,d1
	bmi	start			;skip if no bss
	move.l	#0,d2
loop
	move.l	d2,(a1)+		;clear out memory
	dbra	d1,loop

; from here on, I don't think we change anything until exit time.  WAIT A
; MINUTE -- we can't exit by rts'ing to __savsp, because then we can't
; deallocate the copy.  So we call a subroutine (pushing stack size first)
; that sets __savsp and calls __main, and deallocate when that returns.  I
; guess where we can keep the pointer to the new space is in that hidden bit
; of stack.  _geta4 will look at (__savsp)+8 or so for it.
start
	move.l	sp,__savsp		;save stack pointer
	move.l	4,a6			;get Exec's library base pointer
	move.l	a6,_SysBase		;put where we can get it
	movem.l	d0/a0,-(sp)		;save CLI command parameters

	btst.b	#4,$129(a6)		;check for 68881 flag in AttnFlags
	beq	1$			;skip if not
	lea	2$,a5
	jsr	-30(a6)			;do it in supervisor mode
	bra	1$
2$
	clr.l	-(sp)
	frestore (sp)+			;reset the ffp stuff
	rte				;and return
1$

	lea	dos_name,a1		;get name of dos library
	jsr	-408(a6)		;open the library any version
	move.l	d0,_DOSBase		;set it up
	bne	3$			;skip if okay

  	move.l  #$38007,d7		;AG_OpenLib | AO_DOSLib
	jsr     -108(a6)		;Alert
	bra	4$
3$
	jsr	__main			;call the startup stuff
4$
	add.w	#8,sp			;pop args
	rts				;and return

dos_name:
	dc.b	'dos.library',0

; have to remake this shit here...  This is _oldgeta4
	public	_geta4
_geta4:
	far	data
	lea	__H1_org+32766,a4
	rts

	public	__main,__H0_org

	dseg

	public	_SysBase,__savsp,_DOSBase
	public	__H1_org,__H1_end,__H2_org,__H2_end

